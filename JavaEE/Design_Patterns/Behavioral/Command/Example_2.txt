		Runnable      // command interface
			run()

Producer implements Runnable
	run
		monitor.set(i++)


Consumer implements Runnable
	run
		monitor.get()

class Monitor
{
	synchronized void set(int i){}

	synchronized int get(){}
}


Thread {

	Runnable runnable;

	public Thread(Runnable runnable) {
		this.runnable = runnable;
	}

	public void run() {
		if(runnable!=null)
		{
		runnable.run();
		}
	}

}


client code


Monitor monitor=new Monitor(); // receiver
		Runnable prod = new Producer(monitor); // concrete command

		Runnable cust = new Customer(monitor); // concrete command 

		Thread t1=new Thread(prod) // invoker
		t1.start();

		Thread t2=new Thread(cust) // invoker
		t2.start();

	





